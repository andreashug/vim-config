

snippet imp "import" b
import ${1:module}
endsnippet


snippet ugt "import ugettext_lazy" b
from django.utils.translation import ugettext_lazy as _
endsnippet


snippet ipdb "ipdb breakpoint" i
import ipdb; ipdb.set_trace()  # NOQA
endsnippet


snippet model "django model" b
class ${1:ModelName}(models.Model):
	$0

	class Meta:
		verbose_name = _('`!p snip.rv = t[1].lower()`')
		verbose_name_plural = _('`!p snip.rv = t[1].lower()`s')

	def __str__(self):
		return ''
endsnippet


snippet field "django field" iw
${1:fieldname} = models.${2:Type}Field(_('`!p snip.rv=t[1].replace('_', ' ')`'))
endsnippet

snippet cfield "django char field" iw
${1:fieldname} = models.CharField(_('`!p snip.rv=t[1].replace('_', ' ')`'), max_length=${2:200}$3)$0
endsnippet

snippet ffield "django foreign key field" iw
${1:fieldname} = models.ForeignKey(${2:target}, verbose_name=_('$1')$3)$0
endsnippet

snippet fac "factory boy django factory" b
class ${1:Name}Factory(factory.DjangoModelFactory):
	class Meta:
		model = $1

	$0
endsnippet

snippet get_context_data "context data in django views"
def get_context_data(self, **kwargs):
	context = super(${1:Class}, self).get_context_data(**kwargs)
	$0
	return context
endsnippet

snippet url "django url config" i
url(r'${1:url}', ${2:view}, name='${3:name}'),
endsnippet


snippet modeladmin "django model admin" b
class ${1:Name}Admin(admin.ModelAdmin):
	$0

admin.site.register($1, $1Admin)
endsnippet
